/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShowUserOrdersImport } from './routes/show-user-orders'
import { Route as LoginImport } from './routes/login'
import { Route as FindproductImport } from './routes/findproduct'
import { Route as CreateOrderImport } from './routes/create-order'
import { Route as CreateAccountImport } from './routes/create-account'
import { Route as AboutImport } from './routes/about'
import { Route as ApiProductSearchImport } from './routes/ApiProductSearch'
import { Route as IndexImport } from './routes/index'
import { Route as DisplayItemsIdImport } from './routes/display-items/$id'

// Create/Update Routes

const ShowUserOrdersRoute = ShowUserOrdersImport.update({
  id: '/show-user-orders',
  path: '/show-user-orders',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const FindproductRoute = FindproductImport.update({
  id: '/findproduct',
  path: '/findproduct',
  getParentRoute: () => rootRoute,
} as any)

const CreateOrderRoute = CreateOrderImport.update({
  id: '/create-order',
  path: '/create-order',
  getParentRoute: () => rootRoute,
} as any)

const CreateAccountRoute = CreateAccountImport.update({
  id: '/create-account',
  path: '/create-account',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ApiProductSearchRoute = ApiProductSearchImport.update({
  id: '/ApiProductSearch',
  path: '/ApiProductSearch',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DisplayItemsIdRoute = DisplayItemsIdImport.update({
  id: '/display-items/$id',
  path: '/display-items/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/ApiProductSearch': {
      id: '/ApiProductSearch'
      path: '/ApiProductSearch'
      fullPath: '/ApiProductSearch'
      preLoaderRoute: typeof ApiProductSearchImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/create-account': {
      id: '/create-account'
      path: '/create-account'
      fullPath: '/create-account'
      preLoaderRoute: typeof CreateAccountImport
      parentRoute: typeof rootRoute
    }
    '/create-order': {
      id: '/create-order'
      path: '/create-order'
      fullPath: '/create-order'
      preLoaderRoute: typeof CreateOrderImport
      parentRoute: typeof rootRoute
    }
    '/findproduct': {
      id: '/findproduct'
      path: '/findproduct'
      fullPath: '/findproduct'
      preLoaderRoute: typeof FindproductImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/show-user-orders': {
      id: '/show-user-orders'
      path: '/show-user-orders'
      fullPath: '/show-user-orders'
      preLoaderRoute: typeof ShowUserOrdersImport
      parentRoute: typeof rootRoute
    }
    '/display-items/$id': {
      id: '/display-items/$id'
      path: '/display-items/$id'
      fullPath: '/display-items/$id'
      preLoaderRoute: typeof DisplayItemsIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ApiProductSearch': typeof ApiProductSearchRoute
  '/about': typeof AboutRoute
  '/create-account': typeof CreateAccountRoute
  '/create-order': typeof CreateOrderRoute
  '/findproduct': typeof FindproductRoute
  '/login': typeof LoginRoute
  '/show-user-orders': typeof ShowUserOrdersRoute
  '/display-items/$id': typeof DisplayItemsIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ApiProductSearch': typeof ApiProductSearchRoute
  '/about': typeof AboutRoute
  '/create-account': typeof CreateAccountRoute
  '/create-order': typeof CreateOrderRoute
  '/findproduct': typeof FindproductRoute
  '/login': typeof LoginRoute
  '/show-user-orders': typeof ShowUserOrdersRoute
  '/display-items/$id': typeof DisplayItemsIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/ApiProductSearch': typeof ApiProductSearchRoute
  '/about': typeof AboutRoute
  '/create-account': typeof CreateAccountRoute
  '/create-order': typeof CreateOrderRoute
  '/findproduct': typeof FindproductRoute
  '/login': typeof LoginRoute
  '/show-user-orders': typeof ShowUserOrdersRoute
  '/display-items/$id': typeof DisplayItemsIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ApiProductSearch'
    | '/about'
    | '/create-account'
    | '/create-order'
    | '/findproduct'
    | '/login'
    | '/show-user-orders'
    | '/display-items/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ApiProductSearch'
    | '/about'
    | '/create-account'
    | '/create-order'
    | '/findproduct'
    | '/login'
    | '/show-user-orders'
    | '/display-items/$id'
  id:
    | '__root__'
    | '/'
    | '/ApiProductSearch'
    | '/about'
    | '/create-account'
    | '/create-order'
    | '/findproduct'
    | '/login'
    | '/show-user-orders'
    | '/display-items/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiProductSearchRoute: typeof ApiProductSearchRoute
  AboutRoute: typeof AboutRoute
  CreateAccountRoute: typeof CreateAccountRoute
  CreateOrderRoute: typeof CreateOrderRoute
  FindproductRoute: typeof FindproductRoute
  LoginRoute: typeof LoginRoute
  ShowUserOrdersRoute: typeof ShowUserOrdersRoute
  DisplayItemsIdRoute: typeof DisplayItemsIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiProductSearchRoute: ApiProductSearchRoute,
  AboutRoute: AboutRoute,
  CreateAccountRoute: CreateAccountRoute,
  CreateOrderRoute: CreateOrderRoute,
  FindproductRoute: FindproductRoute,
  LoginRoute: LoginRoute,
  ShowUserOrdersRoute: ShowUserOrdersRoute,
  DisplayItemsIdRoute: DisplayItemsIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/ApiProductSearch",
        "/about",
        "/create-account",
        "/create-order",
        "/findproduct",
        "/login",
        "/show-user-orders",
        "/display-items/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/ApiProductSearch": {
      "filePath": "ApiProductSearch.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/create-account": {
      "filePath": "create-account.tsx"
    },
    "/create-order": {
      "filePath": "create-order.tsx"
    },
    "/findproduct": {
      "filePath": "findproduct.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/show-user-orders": {
      "filePath": "show-user-orders.tsx"
    },
    "/display-items/$id": {
      "filePath": "display-items/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
