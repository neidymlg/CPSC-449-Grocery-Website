CREATE DATABASE IF NOT EXISTS Grocery;
USE Grocery;

CREATE TABLE IF NOT EXISTS `test` (
  `id` INT UNSIGNED
);

INSERT INTO `test` (`id`) VALUES (101);

CREATE TABLE IF NOT EXISTS Store(
	ID INT AUTO_INCREMENT PRIMARY KEY, 
	geom_loc POINT NOT NULL,
	Name VARCHAR(50) NOT NULL, 
	SPATIAL INDEX (geom_loc)
);

DELIMITER //

CREATE TRIGGER before_insert_store
BEFORE INSERT ON Store
FOR EACH ROW
BEGIN
    DECLARE duplicate INT DEFAULT 0;

    SELECT COUNT(*) INTO duplicate
    FROM Store
    WHERE Name = NEW.Name AND ST_Equals(geom_loc, NEW.geom_loc);

    IF duplicate > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Duplicate store name and location';
    END IF;
END //

DELIMITER ; //

CREATE TABLE IF NOT EXISTS Product(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	Name VARCHAR(20) NOT NULL UNIQUE
);


CREATE TABLE IF NOT EXISTS Item(
	ID INT AUTO_INCREMENT, 
	Store_ID INT, 
	Product_ID INT, 
	Name VARCHAR(30) NOT NULL,
	Price Decimal(5, 2) UNSIGNED NOT NULL,
	TS DATE DEFAULT (CURRENT_DATE),
	PRIMARY KEY (ID, Store_ID, Product_ID),
	FOREIGN KEY (Store_ID) REFERENCES Store(ID),
	FOREIGN KEY (Product_ID) REFERENCES Product(ID),
	UNIQUE (Store_ID, Product_ID, Name)
);


CREATE TABLE IF NOT EXISTS User(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	Username VARCHAR(30) NOT NULL UNIQUE,
	Password VARCHAR(30) NOT NULL
);


CREATE TABLE IF NOT EXISTS Orders(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	User_ID INT NOT NULL,
	Total DECIMAL(10,2) NOT NULL, 
	FOREIGN KEY (User_ID) REFERENCES User(ID)
);

CREATE TABLE IF NOT EXISTS User_Order(
	Item_ID INT,
	Store_ID INT, 
	Product_ID INT,
	Order_ID INT,
	PRIMARY KEY (Item_ID, Store_ID, Product_ID, Order_ID),
	FOREIGN KEY (Item_ID, Store_ID, Product_ID) REFERENCES Item(ID, Store_ID, Product_ID),
	FOREIGN KEY (Order_ID) REFERENCES Orders(ID)
);
